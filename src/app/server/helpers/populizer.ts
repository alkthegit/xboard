import { getRandomItem, getRandomNumberString, normalizeLimits } from './array-helper';
import { UserRecord } from '../models/UserRecord';
import { v4 as uuidv4 } from 'uuid';
import { PersonNames } from '../db/seeds/names';
import { LocationsData } from '../db/seeds/location';
import { facesCount } from '../config/constants';
/**
 * –°–æ–∑–¥–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö - –ø–æ–ø—É–ª—è—Ü–∏—é (–º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π) –¥–ª—è –ë–î
 *
 * @param min –º–∏–Ω–∏–º—É–º –Ω–∞—Å–µ–ª–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - `15` - `20`)
 * @param max –º–∞–∫—Å–∏–º—É–º –Ω–∞—Å–µ–ª–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - `35` - `50`)
 * @xFactor üëΩ —á–µ–º –±–æ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∏—Ö –≤ –Ω–æ–≤–æ–π –ø–æ–ø—É–ª—è—Ü–∏–∏. –ó–Ω–∞—á–µ–Ω–∏—è: [5; 95]
 */
export function populateDb(
  min: number = 15 + Math.ceil(Math.random() * 5),
  max: number = 35 + Math.ceil(Math.random() * 15),
  xFactor: number = 5
): UserRecord[] {
  const result: UserRecord[] = [];

  // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å–µ–ª–µ–Ω–∏—è
  const limits = normalizeLimits(min, max);
  const populationSize = limits[0] + Math.trunc((Math.random() * (limits[1] - limits[0] + 1)))

  for (let i = 0; i < populationSize; i++) {
    result.push(produceEntity(xFactor));
  }

  return result;
}

/**
 * –ü–æ—Ä–æ–∂–¥–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å—É—â—Å—Ç–≤–æ
 * @xFactor üëΩ —á–µ–º –±–æ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∏—Ö –≤ –Ω–æ–≤–æ–π –ø–æ–ø—É–ª—è—Ü–∏–∏. –ó–Ω–∞—á–µ–Ω–∏—è: [5; 95]
 * @returns
 */
function produceEntity(xFactor: number = 5): UserRecord {
  // –µ—Å—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ —Ç—ã –Ω–µ –∑–µ–º–ª—è–Ω–∏–Ω
  let x = Math.random() * 100 < xFactor;

  const xNum = x ?
    `#${getRandomNumberString(3, 5)}` : '';
  const gender = x ?
    2 : getRandomItem([0, 1]);
  const genderName = gender === 0 ?
    'male' : gender === 1 ?
      'female' : gender === 2 ?
        'x' : 'male';
  const region = x ?
    LocationsData.find(e => e.code === 'milkyway') :
    getRandomItem(LocationsData.filter(l => l.code !== 'milkyway'));
  const location = getRandomItem(region?.cities ?? []);

  let user: UserRecord = {
    id: uuidv4(),
    first_name: x ? `Alien ${xNum}` : getRandomItem(PersonNames[genderName]?.firstName) ?? '????',
    middle_name: x ? 'Suspect' : getRandomItem(PersonNames[genderName]?.middleName) ?? '????',
    last_name: x ? 'X' : getRandomItem(PersonNames[genderName]?.lastName) ?? '????',
    gender,
    status: getRandomItem([0, 1, 2]),
    region_code: region.code,
    location_name: location,
    user_image: Math.trunc((Math.random() * facesCount)),
    updated: Date.now()
  };

  // –∑–∞–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  startUserBeat(user);

  return Object.seal(user);
}

/**
 * –ù–∞—á–∏–Ω–∞–µ—Ç –ø–æ—Ç–æ–∫ –∂–∏–∑–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 *
 * –° —Ç–µ—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Ä–∞–∑–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
 */
function startUserBeat(userRecord: UserRecord): number {
  if (window?.setInterval) {
    return window.setInterval(() => {
      // –±—É–¥–µ—Ç –ª–∏ —á—Ç–æ-—Ç–æ –º–µ–Ω—è—Ç—å—Å—è
      // –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ—Ö—Ä—è–Ω—é—Ç –∏–Ω–µ—Ä—Ü–∏—é - —Å–∫—Ä–µ–µ –Ω–µ –º–µ–Ω—è—é—Ç—Å—è
      const toChange = Math.random() * 100 > 70;
      if (toChange) {
        // –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—É—Å
        userRecord.status = getRandomItem(
          [0, 1, 2].filter(e => e != userRecord.status)
        );
      }
    }, nextBeat())
  }

  return undefined;
}

/**
 * –í–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—É–ª—å—Å–∞: 600 - 1500 –º—Å
 */
const nextBeat = () => 600 + Math.random() * 901;
